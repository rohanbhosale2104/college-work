#merge sort
def merge(arr, start, mid, end):
    temp = [0] * (end - start + 1)
    left = start
    right = mid + 1
    index = 0

    # Compare elements from both halves
    while left <= mid and right <= end:
        if arr[left] <= arr[right]:
            temp[index] = arr[left]
            index += 1
            left += 1
        else:
            temp[index] = arr[right]
            index += 1
            right += 1

    # Copy remaining elements from left half
    while left <= mid:
        temp[index] = arr[left]
        index += 1
        left += 1

    # Copy remaining elements from right half
    while right <= end:
        temp[index] = arr[right]
        index += 1
        right += 1

    # Copy back to original array
    for i in range(len(temp)):
        arr[start + i] = temp[i]


def mergesort(arr, start, end):
    if start == end:
        return
    mid = start + (end - start) // 2

    # Sort left and right halves
    mergesort(arr, start, mid)
    mergesort(arr, mid + 1, end)

    # Merge sorted halves
    merge(arr, start, mid, end)


# Main code
arr = [6, 3, 5, 2, 2, 8, 1, 3, 2, 9]
mergesort(arr, 0, len(arr) - 1)

# Print result
for num in arr:
    print(num, end=" ")
